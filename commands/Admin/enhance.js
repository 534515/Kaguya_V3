import axios from 'axios';
import tinyurl from 'tinyurl';
import fs from 'fs';
import path from 'path';

export default {
  name: "ÿ¨ŸàÿØÿ©",
  author: "Kaguya Project",
  role: "member",
  aliases:["ÿ™ÿ≠ÿ≥ŸäŸÜ"],
  description: "ÿ±ŸÅÿπ Ÿà ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ¨ŸàÿØÿ© ÿßŸÑÿµŸàÿ±",
  async execute({ api, event }) {
    api.setMessageReaction("üì∑", event.messageID, (err) => {}, true);
    const args = event.body.split(/\s+/).slice(1); // Use slice to skip the first element
    const { threadID, messageID, messageReply } = event;
    const tempImagePath = path.join(process.cwd(), 'tmp', 'enhanced_image.jpg');

    // Check if there's a message reply and if it has attachments
    if (!messageReply || !messageReply.attachments || !(messageReply.attachments[0] || args[0])) {
      return api.sendMessage("‚îê‚Å†(‚Å†Ôø£‚Å†„Éò‚Å†Ôø£‚Å†)‚Å†‚îå | ÿ±ÿØ ÿπŸÑŸâ ÿµŸàÿ±ÿ© ÿßŸà ÿßÿØÿÆŸÑ ÿ±ÿßÿ®ÿ∑Ÿáÿß", threadID, messageID);
    }

    // Determine the photo URL from the reply or command arguments
    const photoUrl = messageReply.attachments[0] ? messageReply.attachments[0].url : args.join(" ");

    // Check if a valid photo URL is present
    if (!photoUrl) {
      return api.sendMessage("‚îê‚Å†(‚Å†Ôø£‚Å†„Éò‚Å†Ôø£‚Å†)‚Å†‚îå | ÿ±ÿØ ÿπŸÑŸâ ÿµŸàÿ±ÿ© ÿßŸà ÿßÿØÿÆŸÑ ÿ±ÿßÿ®ÿ∑Ÿáÿß", threadID, messageID);
    }

    // Notify user to wait
    await api.sendMessage("‚äÇ‚Å†(‚Å†„Éª‚Å†Ôπè‚Å†„Éª‚Å†‚äÇ‚Å†) | Please wait...", threadID, messageID);

    try {
      // Shorten the photo URL using TinyURL
      const shortenedUrl = await tinyurl.shorten(photoUrl);

      // Fetch the upscaled image using the upscale API
      const response = await axios.get(`https://www.api.vyturex.com/upscale?imageUrl=${shortenedUrl}`);
      const processedImageUrl = response.data.resultUrl;

      // Fetch the processed image
      const enhancedImageResponse = await axios.get(processedImageUrl, { responseType: "arraybuffer" });

      // Save the processed image to a temporary file
      fs.writeFileSync(tempImagePath, enhancedImageResponse.data);

      // Send the enhanced image as a reply
      api.setMessageReaction("üì∏", event.messageID, (err) => {}, true);
      await api.sendMessage({
        body: "<‚Å†(‚Å†Ôø£‚Å†Ô∏∂‚Å†Ôø£‚Å†)‚Å†> | ùöÉùô∑ùô¥ ùöÄùô∫ùô∞ùôªùô∏ùöÉùöà ùô∑ùô∞ùöÇ ùô±ùô¥ùô¥ùôΩ ùöÇùô∫ùô≤ùô≤ùô¥ùöÇùöÇùôµùô∫ùôªùôªùöà ùô∏ùôΩùô≤ùöÅùô¥ùô∞ùöÇùô¥ùô≥",
        attachment: fs.createReadStream(tempImagePath)
      }, threadID, () => {
        // Delete the temporary image file after sending
        fs.unlinkSync(tempImagePath);
      }, messageID);
    } catch (error) {
      // Handle errors gracefully
      api.sendMessage(`(‚Å†‚îå‚Å†„Éª‚Å†„ÄÇ‚Å†„Éª‚Å†)‚Å†‚îå | Api Dead...: ${error.message}`, threadID, messageID);
    }
  }
};
